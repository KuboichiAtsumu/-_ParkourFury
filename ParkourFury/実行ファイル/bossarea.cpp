//==============================================================================================================================================
//
// ボスエリア処理
// Author : Atsumu Kuboichi
//
//==============================================================================================================================================

//===========================================================================================================
// ヘッダーインクルード
//===========================================================================================================
#include "bossarea.h"

//===========================================================================================================
// コンストラクタ
//===========================================================================================================
CBossArea::CBossArea() : CArea()
{
}

//===========================================================================================================
// デストラクタ
//===========================================================================================================
CBossArea::~CBossArea()
{
}

//===========================================================================================================
// 初期化処理
//===========================================================================================================
HRESULT CBossArea::Init()
{
	//基底クラス初期化処理
	if (FAILED(CArea::Init()))
	{
		return E_FAIL;
	}

	return S_OK;
}

//===========================================================================================================
// 終了処理
//===========================================================================================================
void CBossArea::Uninit()
{
	//基底クラス終了処理
	CArea::Uninit();
}

//===========================================================================================================
// 解放処理
//===========================================================================================================
void CBossArea::Release()
{
	//基底クラス解放処理
	CArea::Release();
}

//===========================================================================================================
// 更新処理
//===========================================================================================================
void CBossArea::Update()
{
	//基底クラス更新処理
	CArea::Update();
}

//===========================================================================================================
// 描画処理
//===========================================================================================================
void CBossArea::Draw()
{
}

//===========================================================================================================
// 当たり判定
//===========================================================================================================
#include "game.h"
bool CBossArea::Collision(D3DXVECTOR3 pos)
{
	//当たり判定フラグ
	bool bCollision = false;

	//当たり判定がtrueの場合
	if (CArea::Collision(pos))
	{
		//カメラの情報を取得
		CCamera* pCamera = CManager::GetInstance()->GetCamera();

		//現在の座標情報を取得
		D3DXVECTOR3 BossAreaPos = GetPos();
		D3DXVECTOR3 SetPosR(BossAreaPos.x, BossAreaPos.y - 50.0f, BossAreaPos.z);

		//注視点をボスエリアの中央に設定
		pCamera->SetPosR(SetPosR);

		//視点の座標をボスエリアと平行にする
		pCamera->SetPosV({ BossAreaPos.x - 1000.0f, SetPosR.y, BossAreaPos.z });

		//当たり判定をtrueにする
		bCollision = true;
	}

	return bCollision;
}
